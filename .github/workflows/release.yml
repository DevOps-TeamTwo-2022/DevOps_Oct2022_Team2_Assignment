name: Release

on:
  push:
    branches: [main]
    tags:
      - 'v*'
jobs:
  build:
    runs-on: windows-latest   
    steps:
    - uses: actions/checkout@v2
      with:
        python-version: 3.8

    - name: Install a SQL Server suite of tools
      uses: potatoqualitee/mssqlsuite@v1.7
      with:
        install: sqlengine, sqlclient, sqlpackage, localdb

    - name: Run sqlclient
      run: sqlcmd -S localhost -U sa -P dbatools.I0 -d tempdb -Q "SELECT @@version;"

    - name: Install Libraries
      run: |
        pip install flake8 pytest pytest-cov
        pip install Flask
        pip install pyodbc
        pip install regex
                  
    - name: Checkout Own Repo
      uses: actions/checkout@v2
      with:
        repository: DevOps-TeamTwo-2022/DevOps_Oct2022_Team2_Assignment
   
    - name: list our contents
      run: |
        ls
  
    - name: test with pytest
      run: |
        python -m pytest --import-mode=append tests/ --junitxml=report.xml
  
    - if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE.md
  
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with:
        junit_files: "report.xml"    
  
    - name: create folder
      run: mkdir downloads
      
    - name: move files
      run: mv *.xml ./downloads
      
    - name: Upload document
      uses: actions/upload-artifact@v2
      with: 
        name: assetDocuments
        path: downloads    

    - name: Set environment version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}">>$GITHUB_ENV
      
    - name: download remote information
      uses: actions/download-artifact@v2
      with:
        name: assetDocuments
        
    - name: Get tag name from ref
      shell: bash
      run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
      id: get_tag
      
    - name: Create tag in public repository
      run: |
       cd ${{github.workspace}}/another_public_repo
       git tag ${{ steps.get_tag.outputs.tag }}
       git push --tags --porcelain
      
    - name: create release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: ${{get_tag}}
        release_name: Release ${{env.RELEASE_VERSION}}
        
    - name: Archive site content
      uses: thedoctor0/zip-release@master
      with:
        filename: content.zip
        
    - name: upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create-new-release.outputs.upload_url}}
        asset_path: ./content.zip
        asset_name: ${{env.RELEASE_VERSION}}.zip
        asset_content_type: applications/zip
